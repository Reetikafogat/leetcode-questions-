COUNT SUBARRAYS WHERE MAX ELEMENT APPEARS AT LEAST K TIMES

You are given an integer array nums and a positive integer k.
Return the number of subarrays where the maximum element of nums appears at least k times in that subarray.
A subarray is a contiguous sequence of elements within an array.

Example 1:
Input: nums = [1,3,2,3,3], k = 2
Output: 6
Explanation: The subarrays that contain the element 3 at least 2 times are: [1,3,2,3], [1,3,2,3,3], [3,2,3], [3,2,3,3], [2,3,3] and [3,3].

Example 2:
Input: nums = [1,4,2,1], k = 3
Output: 0
Explanation: No subarray contains the element 4 at least 3 times.

CODE:
class Solution(object):
    def countSubarrays(self, nums, k):
        """
        :type nums: List[int]
        :type k: int
        :rtype: int
        """
        max_el = max(nums)
        count = 0
        l = 0
        max_found = 0
        n = len(nums)

        for r in range(n):
            if nums[r] == max_el:
                max_found += 1

            while max_found == k:
                count += n - r
                if nums[l] == max_el:
                    max_found -= 1
                l += 1

        return count
